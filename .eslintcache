[{"/Users/zhaoxin/Desktop/project/admin-bike/src/App.js":"1","/Users/zhaoxin/Desktop/project/admin-bike/src/App.test.js":"2","/Users/zhaoxin/Desktop/project/admin-bike/src/admin.js":"3","/Users/zhaoxin/Desktop/project/admin-bike/src/components/Footer/index.js":"4","/Users/zhaoxin/Desktop/project/admin-bike/src/components/Header/index.js":"5","/Users/zhaoxin/Desktop/project/admin-bike/src/components/NavLeft/index.js":"6","/Users/zhaoxin/Desktop/project/admin-bike/src/index.js":"7","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/demo/Child.js":"8","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/demo/Life.js":"9","/Users/zhaoxin/Desktop/project/admin-bike/src/reportWebVitals.js":"10","/Users/zhaoxin/Desktop/project/admin-bike/src/setupTests.js":"11","/Users/zhaoxin/Desktop/project/admin-bike/src/config/menuConfig.js":"12","/Users/zhaoxin/Desktop/project/admin-bike/src/resource/doc.js":"13","/Users/zhaoxin/Desktop/project/admin-bike/src/resource/menuConfig.js":"14","/Users/zhaoxin/Desktop/project/admin-bike/src/utils/utils.js":"15","/Users/zhaoxin/Desktop/project/admin-bike/src/axios/index.js":"16","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/home/index.js":"17","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router1/Home.js":"18","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router1/Abount.js":"19","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router1/Main.js":"20","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router1/Topic.js":"21","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router2/Home.js":"22","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router2/router.js":"23","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router2/Main.js":"24","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router3/Home.js":"25","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router3/Main.js":"26","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router3/router.js":"27","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router3/Info.js":"28","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router3/NoMatch.js":"29","/Users/zhaoxin/Desktop/project/admin-bike/src/router.js":"30","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/login/index.js":"31","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/buttons.js":"32","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/noMatch/index.js":"33","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/modals.js":"34","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/loadings.js":"35","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/login.js":"36","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/register.js":"37","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/table/basicTable.js":"38","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/carousel.js":"39","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/gallery.js":"40","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/message.js":"41","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/notice.js":"42","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/tabs.js":"43","/Users/zhaoxin/Desktop/project/admin-bike/src/common.js":"44","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/city/index.js":"45","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/order/detail.js":"46","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/order/index.js":"47","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/table/heightTable.js":"48","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/chinaprovincecity.js":"49","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/AreaModal/Area.jsx":"50","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/AreaModal/china-data.js":"51","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/AreaModal/index.jsx":"52"},{"size":213,"mtime":1618933811748,"results":"53","hashOfConfig":"54"},{"size":246,"mtime":1618586892281,"results":"55","hashOfConfig":"54"},{"size":832,"mtime":1618934604866,"results":"56","hashOfConfig":"54"},{"size":231,"mtime":1618740143118,"results":"57","hashOfConfig":"54"},{"size":3104,"mtime":1622878263154,"results":"58","hashOfConfig":"54"},{"size":1382,"mtime":1618935337026,"results":"59","hashOfConfig":"54"},{"size":676,"mtime":1618933348589,"results":"60","hashOfConfig":"54"},{"size":904,"mtime":1618590048351,"results":"61","hashOfConfig":"54"},{"size":1509,"mtime":1618659382486,"results":"62","hashOfConfig":"54"},{"size":362,"mtime":1618586892282,"results":"63","hashOfConfig":"54"},{"size":241,"mtime":1618586892282,"results":"64","hashOfConfig":"54"},{"size":2838,"mtime":1628571856557,"results":"65","hashOfConfig":"54"},{"size":627,"mtime":1618732718526,"results":"66","hashOfConfig":"54"},{"size":2535,"mtime":1618677974401,"results":"67","hashOfConfig":"54"},{"size":685,"mtime":1622878824289,"results":"68","hashOfConfig":"54"},{"size":1866,"mtime":1628564577709,"results":"69","hashOfConfig":"54"},{"size":238,"mtime":1618933908334,"results":"70","hashOfConfig":"54"},{"size":1090,"mtime":1618846311454,"results":"71","hashOfConfig":"54"},{"size":184,"mtime":1618845298019,"results":"72","hashOfConfig":"54"},{"size":180,"mtime":1618850207862,"results":"73","hashOfConfig":"54"},{"size":182,"mtime":1618844300872,"results":"74","hashOfConfig":"54"},{"size":764,"mtime":1618849373437,"results":"75","hashOfConfig":"54"},{"size":857,"mtime":1622878370773,"results":"76","hashOfConfig":"54"},{"size":356,"mtime":1618850326301,"results":"77","hashOfConfig":"54"},{"size":1004,"mtime":1618854505968,"results":"78","hashOfConfig":"54"},{"size":466,"mtime":1618853526350,"results":"79","hashOfConfig":"54"},{"size":1196,"mtime":1618882913543,"results":"80","hashOfConfig":"54"},{"size":443,"mtime":1618855001112,"results":"81","hashOfConfig":"54"},{"size":196,"mtime":1618854245750,"results":"82","hashOfConfig":"54"},{"size":3266,"mtime":1651461467275,"results":"83","hashOfConfig":"54"},{"size":212,"mtime":1622880957393,"results":"84","hashOfConfig":"54"},{"size":2860,"mtime":1618937790435,"results":"85","hashOfConfig":"54"},{"size":258,"mtime":1618936132573,"results":"86","hashOfConfig":"54"},{"size":4354,"mtime":1619012359952,"results":"87","hashOfConfig":"54"},{"size":1680,"mtime":1622878750919,"results":"88","hashOfConfig":"54"},{"size":3989,"mtime":1619367881606,"results":"89","hashOfConfig":"54"},{"size":9473,"mtime":1619625329253,"results":"90","hashOfConfig":"54"},{"size":8982,"mtime":1622878469462,"results":"91","hashOfConfig":"54"},{"size":1360,"mtime":1619192381276,"results":"92","hashOfConfig":"54"},{"size":2181,"mtime":1619110272205,"results":"93","hashOfConfig":"54"},{"size":875,"mtime":1622878780564,"results":"94","hashOfConfig":"54"},{"size":1661,"mtime":1619100456425,"results":"95","hashOfConfig":"54"},{"size":3567,"mtime":1619105635892,"results":"96","hashOfConfig":"54"},{"size":503,"mtime":1622877717021,"results":"97","hashOfConfig":"54"},{"size":8839,"mtime":1622643597547,"results":"98","hashOfConfig":"54"},{"size":4046,"mtime":1651461462529,"results":"99","hashOfConfig":"54"},{"size":9420,"mtime":1651463295158,"results":"100","hashOfConfig":"54"},{"size":12884,"mtime":1622878681113,"results":"101","hashOfConfig":"54"},{"size":8505,"mtime":1628574063131,"results":"102","hashOfConfig":"54"},{"size":29327,"mtime":1628566699911,"results":"103","hashOfConfig":"54"},{"size":550104,"mtime":1628560013921,"results":"104","hashOfConfig":"54"},{"size":10698,"mtime":1628574188980,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1721bza",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220"},"/Users/zhaoxin/Desktop/project/admin-bike/src/App.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/App.test.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/admin.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/components/Footer/index.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/components/Header/index.js",["221"],"import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport './index.less';\nimport Util from '../../utils/utils';\nimport axios from '../../axios';\n\nexport default class Header extends Component {\n    state = {}\n\n    componentWillMount() {\n        this.setState({\n            username: \"赵鑫\"\n        });\n        setInterval(() => {\n            let systime = Util.formateDate(new Date().getTime());\n            this.setState({\n                systime\n            })\n        }, 1000);\n\n        this.getWeatherAPIData();\n    }\n\n    getWeatherAPIData() {\n        // let city = \"北京\"\n        axios.jsonp({\n            // url: 'http://api.map.baidu.com/weather/v1/?location=116.40387,39.91489&data_type=all&ak=84qwIG9nwmFZGFMnmF0c6vy2ccor81rQ'\n            // url: 'http://api.map.baidu.com/reverse_geocoding/v3/?ak=ccmBPiAa8OZVSsB3yGfQDS0UMdMLmQ2H&output=json&coordtype=wgs84ll&location=31.225696563611,121.49884033194'\n            // +encodeURIComponent(city)\n            url: 'http://api.map.baidu.com/weather/v1/?district_id=110114&data_type=all&ak=GZ3nhnNBGUU6GkDeI1wMIpDUbw14wUK6',\n        }).then((res) => {\n            if (res.status === \"success\") {\n                console.log(res);\n            }\n            // if(res.status == 'success'){\n            //     let data = res.results[0].weather_data[0];\n            //     this.setState({\n            //         dayPictureUrl:data.dayPictureUrl,\n            //         weather:data.weather\n            //     })\n            // }\n        })\n    }\n\n    render() {\n        const { menuType } = this.props;\n        return (\n            <div className=\"header\">\n                <Row className=\"header-top\">\n                    {\n                       menuType ? <Col span={6} className=\"logo\">\n                            <img src=\"/assets/logo-ant.svg\" alt=\"\" />\n                            <span>IMooc 通用管理系统</span>\n                        </Col> : \"\"\n                    }\n                    <Col span= {menuType ? 18 : 24 }>\n                        <span>欢迎，{this.state.username}</span>\n                        <a href=\"#\">退出</a>\n                    </Col>\n                </Row>\n                {\n                    menuType ? \"\" : <Row className=\"breadcrumb\">\n                        <Col span=\"4\" className=\"breadcrumb-title\">\n                            首页\n                        </Col>\n                        <Col span=\"20\" className=\"weather\">\n                            <span className=\"date\">{this.state.systime}</span>\n                            {/* <span className=\"weather-detail\">晴朗</span> */}\n                            <span className=\"weather-img\">\n                                <img src={this.state.dayPictureUrl} alt=\"\" />\n                            </span>\n                            <span className=\"weather-detail\">\n                                {/* {this.state.weather} */}\n                                晴朗\n                            </span>\n                        </Col>\n                    </Row>\n                }\n            </div>\n        )\n    }\n}","/Users/zhaoxin/Desktop/project/admin-bike/src/components/NavLeft/index.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/index.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/demo/Child.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/demo/Life.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/reportWebVitals.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/setupTests.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/config/menuConfig.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/resource/doc.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/resource/menuConfig.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/utils/utils.js",["222"],"export default {\n    formateDate (time) {\n        if (!time) return;\n        let date = new Date(time);\n        return date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate() + \" \" + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n    },\n\n    pagination (data, callback) {\n        return {\n            onChange: (current) => {\n                callback(current)\n            },\n            current: data.result.page,\n            pageSize: data.result.page_size,\n            total: data.result.total,\n            showTotal: () => {\n                return `共${data.result.total}条`\n            },\n            showQuickJumper: true,\n        }\n    }\n}","/Users/zhaoxin/Desktop/project/admin-bike/src/axios/index.js",["223","224"],"import JsonP from 'jsonp';\nimport axios from 'axios';\nimport { Modal } from 'antd';\nexport default class Axios {\n    static jsonp(options) {\n        return new Promise((resolve, reject) => {\n            JsonP(options.url, {\n                param: 'callback'\n            }, function (err, response) {\n                if (response.status === \"success\") {\n                    resolve(response);\n                } else {\n                    reject(response.message);\n                }\n            })\n        })\n    }\n\n    static ajax(options) {\n        let loading;\n        if (options.data && options.data.isShowLoading !== false) {\n            loading = document.getElementById('ajaxLoading');\n            loading.style.display = \"block\";\n        }\n        let baseApi = 'https://www.fastmock.site/mock/f5ebc7863fe48c5ac46e232eaa9700bb/mockapi';\n        return new Promise((resolve, reject) => {\n            axios({\n                url: options.url,\n                method: 'get',\n                baseURL: baseApi,\n                timeout: 5000,\n                params: (options.data && options.data.params) || \"\"\n            }).then((response) => {\n                if (options.data && options.data.isShowLoading !== false) {\n                    loading = document.getElementById('ajaxLoading');\n                    loading.style.display = \"none\";\n                }\n                if (response.status = \"200\") {\n                    let res = response.data;\n                    if (res.code == \"0\") {\n                        resolve(res);\n                    } else {\n                        Modal.info({\n                            title: '提示',\n                            content: res.message\n                        })\n                    }\n                } else {\n                    reject(response.data);\n                }\n            })\n        });\n    }\n}","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/home/index.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router1/Home.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router1/Abount.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router1/Main.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router1/Topic.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router2/Home.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router2/router.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router2/Main.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router3/Home.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router3/Main.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router3/router.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router3/Info.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/router-demo/router3/NoMatch.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/router.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/login/index.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/buttons.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/noMatch/index.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/modals.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/loadings.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/login.js",["225"],"import { Card, Form, Input, Button, message, Icon, Checkbox } from 'antd';\nimport React, { Component } from 'react';\n\nconst FormItem = Form.Item\n\nclass LoginForm extends Component {\n    handleSubmit = () => {\n        let userInfo = this.props.form.getFieldsValue();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                message.success(`${userInfo.userName} 恭喜你，您通过了本次的表单学习，当前密码为 ${userInfo.userPwd}`)\n            }\n        })\n    }\n    render() {\n        const { getFieldDecorator } = this.props.form\n        return (\n            <div>\n                <Card title=\"登录行内表单\">\n                    <Form layout=\"inline\">\n                        <FormItem>\n                            <Input placeholder=\"请输入用户名\" />\n                        </FormItem>\n                        <FormItem>\n                            <Input placeholder=\"请输入密码\" />\n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\">登录</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n\n                <Card title=\"登录水平表单\" style={{ marginTop: 10 }}>\n                    <Form style={{ width: 300 }}>\n                        <FormItem>\n                            {\n                                getFieldDecorator('userName', {\n                                    initialValue: '',\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '用户名不能为空'\n                                        },\n                                        {\n                                            min: 5,\n                                            max: 10,\n                                            message: '长度不在范围内'\n                                        },\n                                        {\n                                            // pattern: /^\\w+$/g,\n                                            pattern: new RegExp('^\\\\w+$', 'g'),\n                                            message: '用户名必须为字母或者数字'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"user\" />} placeholder=\"请输入用户名\" />\n                                )\n                            }\n                        </FormItem>\n                        <FormItem>\n                            {\n                                getFieldDecorator('userPwd', {\n                                    initialValue: '',\n                                    rules: []\n                                })(\n                                    <Input.Password prefix={<Icon type=\"lock\" />} placeholder=\"请输入用密码\" />\n                                )\n                            }\n                        </FormItem>\n                        <FormItem  name=\"remember\" valuePropName=\"checked\">\n                            {\n                                getFieldDecorator('remember', {\n                                    valuePropName: 'checked',\n                                    initialValue: true,\n                                })(\n                                    <Checkbox>记住密码</Checkbox>\n                                )\n                            }\n                            <a href=\"#\" style={{float: 'right'}}>忘记密码</a>\n                        </FormItem>\n                        <FormItem>\n                            <Button type=\"primary\" onClick={this.handleSubmit}>登录</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}\nexport default Form.create()(LoginForm)","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/register.js",["226"],"import React, { Component } from 'react';\nimport {\n    Card,\n    Form,\n    Input,\n    Select,\n    Radio,\n    InputNumber,\n    Switch,\n    DatePicker,\n    TimePicker,\n    Upload,\n    Icon,\n    Checkbox,\n    Button,\n    message\n} from 'antd';\nimport moment from 'moment';\n\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst Option = Select.Option;\nconst TextArea = Input.TextArea;\n\n\nclass FormRegister extends Component {\n\n    state = {}\n\n    getBase64 = (img, callback)  => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    handleChange = (info) => {\n        if (info.file.status === 'uploading') {\n          this.setState({ loading: true });\n          return;\n        }\n        if (info.file.status === 'done') {\n          // Get this url from response in real world.\n          this.getBase64(info.file.originFileObj, imageUrl =>\n            this.setState({\n              userImg: imageUrl,\n              loading: false,\n            }),\n          );\n        }\n    }\n\n    handleSubmit = () =>  {\n        let userInfo = this.props.form.getFieldsValue();\n        console.log(JSON.stringify(userInfo))\n        message.success(`${userInfo.userName} 恭喜你，您通过本次表单组件学习，当前密码为：${userInfo.userPwd}`)\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form\n\n        const FormItemLayout = {\n            labelCol: {\n                xs: 24,\n                sm: 4\n            },\n            wrapperCol: {\n                xs: 24,\n                sm: 10\n            }\n        }\n\n        const rowObject = {\n            minRows: 4, \n            maxRows: 6\n        }\n\n        const offsetLayout = {\n            wrapperCol: {\n                xs: 24, \n                sm: {\n                    span: 12,\n                    offset: 4\n                }\n            }\n        }\n\n        return (\n            <div>\n                <Card title=\"注册表单\">\n                    <Form>\n                        <FormItem label=\"用户名\" {...FormItemLayout}>\n                            {\n                                getFieldDecorator('userName', {\n                                    initialValue: '',\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '用户名不能为空'\n                                        }\n                                    ]\n                                })(\n                                    <Input placeholder=\"请输入用户名\" />\n                                )\n                            }\n                        </FormItem>\n                        <FormItem label=\"密码\" {...FormItemLayout}>\n                            {\n                                getFieldDecorator('userPwd', {\n                                    initialValue: '',\n                                })(\n                                    <Input placeholder=\"请输入密码\" />\n                                )\n                            }\n                        </FormItem>\n                        <FormItem label=\"性别\" {...FormItemLayout}>\n                            {\n                                getFieldDecorator('sex', {\n                                    initialValue: '1',\n                                })(\n                                    <RadioGroup>\n                                        <Radio value=\"1\">男</Radio>\n                                        <Radio value=\"2\">女</Radio>\n                                    </RadioGroup>\n                                )\n                            }\n                        </FormItem>\n                        <FormItem label=\"年龄\" {...FormItemLayout}>\n                            {\n                                getFieldDecorator('age', {\n                                    initialValue: 18,\n                                })(\n                                    <InputNumber />\n                                )\n                            }\n                        </FormItem>\n                        <FormItem label=\"当前状态\" {...FormItemLayout}>\n                            {\n                                getFieldDecorator('state', {\n                                    initialValue: \"2\",\n                                })(\n                                    <Select>\n                                        <Option value=\"1\">咸鱼一条</Option>\n                                        <Option value=\"2\">风华浪子</Option>\n                                        <Option value=\"3\">北大才子一枚</Option>\n                                        <Option value=\"4\">百度FE</Option>\n                                        <Option value=\"5\">创业者</Option>\n                                        <Option value=\"6\">找工作</Option>\n                                    </Select>\n                                )\n                            }\n                        </FormItem>\n                        <FormItem label=\"兴趣爱好\" {...FormItemLayout}>\n                            {\n                                getFieldDecorator('interest', {\n                                    initialValue: [\"2\", \"5\"],\n                                })(\n                                    <Select mode=\"multiple\">\n                                        <Option value=\"1\">游泳</Option>\n                                        <Option value=\"2\">打篮球</Option>\n                                        <Option value=\"3\">踢足球</Option>\n                                        <Option value=\"4\">跑步</Option>\n                                        <Option value=\"5\">爬山</Option>\n                                        <Option value=\"6\">骑行</Option>\n                                        <Option value=\"7\">桌球</Option>\n                                        <Option value=\"8\">麦霸</Option>\n                                        <Option value=\"9\">舞者</Option>\n                                    </Select>\n                                )\n                            }\n                        </FormItem>\n                        <FormItem label=\"是否已婚\" {...FormItemLayout}>\n                            {\n                                getFieldDecorator('isMarried', {\n                                    valuePropName: 'checked',\n                                    initialValue: true\n                                })(\n                                    <Switch></Switch>\n                                )\n                            }\n                        </FormItem>\n                        <FormItem label=\"生日\" {...FormItemLayout}>\n                            {\n                                getFieldDecorator('birthday', {\n                                    initialValue: moment('2021-4-28')\n                                })(\n                                    <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n                                )\n                            }\n                        </FormItem>\n                        <FormItem label=\"联系地址\" {...FormItemLayout}>\n                            {\n                                getFieldDecorator('address', {\n                                    initialValue: '回龙观地铁站'\n                                })(\n                                    <TextArea r autosize={rowObject}></TextArea>\n                                )\n                            }\n                        </FormItem>\n                        <FormItem label=\"早起时间\" {...FormItemLayout}>\n                            {\n                                getFieldDecorator('time')(\n                                    <TimePicker/>\n                                )\n                            }\n                        </FormItem>\n                        <FormItem label=\"头像\" {...FormItemLayout}>\n                            {\n                                getFieldDecorator('userImg')(\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        showUploadList={false}\n                                        action=\"//jsonplaceholder.typicode.com/posts/\"\n                                        onChange={this.handleChange}\n                                  >\n                                    {this.state.userImg ? <img src={this.state.userImg} alt=\"avatar\" style={{ width: '100%' }} /> : <Icon type=\"plus\"/>}\n                                  </Upload>\n                                )\n                            }\n                        </FormItem>\n                        <FormItem {...offsetLayout}>\n                            {\n                                getFieldDecorator('userImg')(\n                                   <Checkbox>我已阅读过<a href=\"#\">慕课协议</a></Checkbox>\n                                )\n                            }\n                        </FormItem>\n                        <FormItem {...offsetLayout}>\n                            <Button type=\"primary\" onClick={this.handleSubmit}>注册</Button>\n                        </FormItem>\n                    </Form>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default Form.create()(FormRegister)","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/table/basicTable.js",["227","228","229"],"import React, { Component } from 'react';\nimport { Card, message, Modal, Table, Button } from 'antd';\nimport axios from '../../axios';\nimport Utils from './../../utils/utils';\n// import axios from \"axios\";\n\nexport default class basicTable extends Component {\n    state = {}\n\n    params =  {\n        page: 1\n    }\n\n    componentDidMount() {\n        const data = [\n            {\n                id: '0',\n                username: '赵鑫',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2021-04-30',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            },\n            {\n                id: '1',\n                username: 'Jack',\n                sex: '1',\n                state: '1',\n                interest: '1',\n                birthday: '2021-04-30',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            },\n            {\n                id: '0',\n                username: 'Lili',\n                sex: '2',\n                state: '1',\n                interest: '1',\n                birthday: '2021-04-30',\n                address: '北京市海淀区奥林匹克公园',\n                time: '09:00'\n            }\n        ]\n\n        data.map((item, index) => {\n            item.key = index;\n        })\n\n        const dataSource2 = []\n\n        this.setState({\n            dataSource: data,\n            dataSource2: dataSource2\n        });\n\n        this.request();\n    }\n\n    // 动态获取mock数据\n    request  = () => {\n        // 方式一：直接使用axios进行请求\n        // const baseUrl = 'https://www.fastmock.site/mock/f5ebc7863fe48c5ac46e232eaa9700bb/mockapi'\n        // axios.get(baseUrl + '/table/list').then((res) => {\n        //     console.log(JSON.stringify(res))\n        //     if(res.status === 200 && res.data.code === 0) {\n        //         this.setState({\n        //             dataSource2: res.data.result\n        //         })\n        //     }\n        // })\n\n        // 方式二：使用封装的axios进行请求\n        let _this = this;\n        axios.ajax({\n            url: '/table/list',\n            data:{\n                params:{\n                    page: this.params.page\n                },\n                isShowLoading: true,\n            }\n        }).then((res) => {\n            if (res.code === 0) {\n                res.result.list.map((item, index) => {\n                    item.key = index\n                })\n                this.setState({\n                    dataSource2: res.result.list,\n                    selectedRowKeys: [],\n                    selectedRows: null,\n                    pagination: Utils.pagination(res,(current)=>{\n                        _this.params.page = current;\n                        this.request();\n                    })\n                })\n            }\n        })\n    }\n\n    onRowClick = (record, index) => {\n        let selectKey = [index];\n        Modal.info({\n            title: \"信息\",\n            content: `用户名：${record.username}, 爱好：${record.interest}`\n        })\n        this.setState({\n            selectedRadioRowKeys: selectKey,\n            selectedItem: record\n        })\n    }\n\n    // 多选执行删除动作\n    handleDelete = (() => {\n        let rows = this.state.selectedRows; // 获取多选所有选中行的数组数据\n        let ids = [];\n        rows.map((item) => {\n            ids.push(item.id);\n        })\n        Modal.confirm({\n            title: '删除提示',\n            okText: '确定',\n            cancelText: '取消',\n            content: `您确定要删除这些数据吗？${ids.join(',')}`,\n            onOk: () => {\n                console.log('删除成功删除成功删除成功');\n                message.success('删除成功');\n                this.request();\n                this.setState({  // 删除之后，置空选中的数据数组，选中数据的索引数组\n                    selectedCheckRowKeys: [],\n                    selectedRows: null\n                })\n            }\n        })\n    })\n\n    render() {\n        const columns = [\n            {\n                title: 'id',\n                dataIndex: 'id',\n            },\n            {\n                title: '用户名',\n                dataIndex: 'username',\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                render (sex) {\n                    return sex === 1 ? \"男\" : \"女\"\n                }\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                render (state) {\n                    let config = {\n                        \"1\": \"咸鱼一条\",\n                        \"2\": \"风华浪子\",\n                        \"3\": \"北大才子\",\n                        \"4\": \"百度FE\",\n                        \"5\": \"创业者\",\n                    }\n                    return config[state]\n                }\n            },\n            {\n                title: '爱好',\n                dataIndex: 'interest',\n                render (interest) {\n                    let config = {\n                        \"1\": \"游泳\",\n                        \"2\": \"打篮球\",\n                        \"3\": \"踢足球\",\n                        \"4\": \"跑步\",\n                        \"5\": \"爬山\",\n                        \"6\": \"骑行\",\n                        \"7\": \"桌球\",\n                        \"8\": \"麦霸\",\n                    }\n                    return config[interest]\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n            },\n            {\n                title: '地址',\n                dataIndex: 'address',\n            },\n            {\n                title: '早起时间',\n                dataIndex: 'time',\n            }\n        ]\n\n        const { selectedRadioRowKeys, selectedCheckRowKeys } = this.state;\n        const rowRadioSelection = {\n            type: \"radio\",  \n            selectedRowKeys: selectedRadioRowKeys, // 单选 - 选中数组数组\n        }\n\n        const rowCheckSelection = {\n            type: \"checkbox\",\n            selectedRowKeys: selectedCheckRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.setState({\n                    selectedCheckRowKeys: selectedRowKeys, // 多选 - 选中数据的\n                    selectedRows    // 多选 - 选中数据的索引数组\n                })\n            }\n        }\n\n        return (\n            <div>\n                <Card title=\"基础表格\">\n                    <Table\n                        bordered\n                        pagination={false}\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                    />\n                </Card>\n                 <Card title=\"动态数据渲染表格\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        pagination={false}\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                    />\n                </Card>\n                <Card title=\"mock-单选\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        rowSelection={rowRadioSelection}\n                        onRow={(record, index) => {\n                            return {\n                                onClick: () => {\n                                    this.onRowClick(record, index);\n                                }\n                            }\n                        }}\n                        pagination={false}\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                    />\n                </Card>\n                <Card title=\"mock-多选\" style={{margin: '10px 0'}}>\n                    <div style={{marginBottom: 10}}>\n                        <Button onClick={this.handleDelete}>删除</Button>\n                    </div>\n                    <Table\n                        bordered\n                        rowSelection={rowCheckSelection}\n                        pagination={false}\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                    />\n                </Card>\n                <Card title=\"mock-表格数据分页\" style={{margin: '10px 0'}}>\n                    <div style={{marginBottom: 10}}>\n                        <Button onClick={this.handleDelete}>删除</Button>\n                    </div>\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource2}\n                        pagination={this.state.pagination}\n                    />\n                </Card>\n            </div>\n        );\n    }\n}\n\n","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/carousel.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/gallery.js",["230"],"import React from 'react'\nimport { Card, Row, Col, Modal } from 'antd'\n\nexport default class Gallerys extends React.Component {\n    state = {\n        visible: false\n    }\n    openGallery = (imgSrc) => {\n        this.setState({\n            visible: true,\n            currentImg: '/gallery/' + imgSrc\n        })\n    }\n\n    render() {\n        const imgs = [\n            ['1.png', '2.png', '3.png', '4.png', '5.png'],\n            ['6.png', '7.png', '8.png', '9.png', '10.png'],\n            ['11.png', '12.png', '13.png', '14.png', '15.png'],\n            ['16.png', '17.png', '18.png', '19.png', '20.png'],\n            ['21.png', '22.png', '23.png', '24.png', '25.png']\n        ]\n\n        // 易错的地方 => 直接返回一个Card，而不是{}\n        const imgList = imgs.map((list) => list.map((item) => \n            <Card\n                style={{ marginBottom: 10 }}\n                cover={<img src={'/gallery/'+item} onClick={() => this.openGallery(item)} />}\n            >\n                <Card.Meta title=\"React Admin\" description=\"I Love Imooc\" />\n            </Card>\n        ))\n\n        return (\n            <div className=\"card-wrap\">\n                <Row gutter={10}>\n                    <Col md={5}>\n                        {imgList[0]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[1]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[2]}\n                    </Col>\n                    <Col md={5}>\n                        {imgList[3]}\n                    </Col>\n                    <Col md={4}>\n                        {imgList[4]}\n                    </Col>\n                </Row>\n                <Modal \n                    width={300}\n                    height={500}\n                    visible={this.state.visible}\n                    title=\"图片画廊\"\n                    onCancel={() => {\n                        this.setState({visible: false})\n                    }}\n                    footer={null}\n                >\n                    <img src={this.state.currentImg} alt=\"\" style={{width: '100%'}}/>\n                </Modal>\n            </div>\n        );\n    }\n}","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/message.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/notice.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/ui/tabs.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/common.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/city/index.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/order/detail.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/order/index.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/table/heightTable.js",["231"],"import React, { Component } from 'react';\nimport { Card, message, Modal, Table, Button, Badge } from 'antd';\nimport axios from '../../axios';\nexport default class heightTable extends Component {\n    state = {};\n\n    params = {\n        page: 1\n    }\n\n    componentDidMount () {\n        this.request()\n    }\n\n    request () {\n        axios.ajax({\n            url: '/table/high/list',\n            data:{\n                params:{\n                    page: this.params.page\n                },\n                isShowLoading: true,\n            }\n        }).then((res) => {\n            if (res.code === 0) {\n                res.result.list.map((item, index) => {\n                    item.key = index\n                })\n                this.setState({\n                    dataSource: res.result.list\n                })\n            }\n        })\n    }\n\n    handleChange = (pagination, filters, sorter) => {\n        console.log(sorter, 'sorter')\n        this.setState({\n            sortOrder: sorter.order\n        })\n    }\n\n    // 删除操作\n    handleDelete = (item) => {\n        const id = item.id;\n        Modal.info({\n            title: '删除',\n            content: `您确定要删除id为${id}的数据吗?`,\n            onOk: () => {\n                message.success('删除成功');\n                this.request();\n            }\n        })\n    }\n\n    render () {\n        const columns = [\n            {\n                title: 'id',\n                dataIndex: 'id',\n                width: 80,\n            },\n            {\n                title: '用户名',\n                dataIndex: 'username',\n                width: 80,\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                width: 80,\n                render (sex) {\n                    return sex === 1 ? \"男\" : \"女\"\n                }\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                width: 120,\n                render (state) {\n                    let config = {\n                        \"1\": \"咸鱼一条\",\n                        \"2\": \"风华浪子\",\n                        \"3\": \"北大才子\",\n                        \"4\": \"百度FE\",\n                        \"5\": \"创业者\",\n                    }\n                    return config[state]\n                }\n            },\n            {\n                title: '爱好',\n                dataIndex: 'interest',\n                width: 120,\n                render (interest) {\n                    let config = {\n                        \"1\": \"游泳\",\n                        \"2\": \"打篮球\",\n                        \"3\": \"踢足球\",\n                        \"4\": \"跑步\",\n                        \"5\": \"爬山\",\n                        \"6\": \"骑行\",\n                        \"7\": \"桌球\",\n                        \"8\": \"麦霸\",\n                    }\n                    return config[interest]\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '地址',\n                dataIndex: 'address',\n                width: 120,\n            },\n            {\n                title: '早起时间',\n                dataIndex: 'time',\n                width: 120,\n            }\n        ]\n\n        const columns2 = [\n            {\n                title: 'id',\n                dataIndex: 'id',\n                width: 80,\n                fixed: \"left\"\n            },\n            {\n                title: '用户名',\n                dataIndex: 'username',\n                width: 80,\n                fixed: \"left\"\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                width: 80,\n                render (sex) {\n                    return sex === 1 ? \"男\" : \"女\"\n                }\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                width: 80,\n                render (state) {\n                    let config = {\n                        \"1\": \"咸鱼一条\",\n                        \"2\": \"风华浪子\",\n                        \"3\": \"北大才子\",\n                        \"4\": \"百度FE\",\n                        \"5\": \"创业者\",\n                    }\n                    return config[state]\n                }\n            },\n            {\n                title: '爱好',\n                dataIndex: 'interest',\n                width: 80,\n                render (interest) {\n                    let config = {\n                        \"1\": \"游泳\",\n                        \"2\": \"打篮球\",\n                        \"3\": \"踢足球\",\n                        \"4\": \"跑步\",\n                        \"5\": \"爬山\",\n                        \"6\": \"骑行\",\n                        \"7\": \"桌球\",\n                        \"8\": \"麦霸\",\n                    }\n                    return config[interest]\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n                width: 80,\n            },\n            {\n                title: '地址',\n                dataIndex: 'address',\n                width: 80,\n                fixed: 'right'\n            },\n            {\n                title: '早起时间',\n                dataIndex: 'time',\n                width: 80,\n                fixed: 'right'\n            }\n        ]\n\n        const columns3 = [\n            {\n                title: 'id',\n                dataIndex: 'id',\n            },\n            {\n                title: '用户名',\n                dataIndex: 'username',\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                render (sex) {\n                    return sex === 1 ? \"男\" : \"女\"\n                }\n            },\n            {\n                title: '年龄',\n                dataIndex: 'age',\n                sorter: (a, b) => {\n                    return a.age - b.age\n                },\n                sortOrder: this.state.sortOrder\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                render (state) {\n                    let config = {\n                        \"1\": \"咸鱼一条\",\n                        \"2\": \"风华浪子\",\n                        \"3\": \"北大才子\",\n                        \"4\": \"百度FE\",\n                        \"5\": \"创业者\",\n                    }\n                    return config[state]\n                }\n            },\n            {\n                title: '爱好',\n                dataIndex: 'interest',\n                render (interest) {\n                    let config = {\n                        \"1\": \"游泳\",\n                        \"2\": \"打篮球\",\n                        \"3\": \"踢足球\",\n                        \"4\": \"跑步\",\n                        \"5\": \"爬山\",\n                        \"6\": \"骑行\",\n                        \"7\": \"桌球\",\n                        \"8\": \"麦霸\",\n                    }\n                    return config[interest]\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n            },\n            {\n                title: '地址',\n                dataIndex: 'address',\n            },\n            {\n                title: '早起时间',\n                dataIndex: 'time',\n            }\n        ]\n\n        const columns4 = [\n            {\n                title: 'id',\n                dataIndex: 'id',\n            },\n            {\n                title: '用户名',\n                dataIndex: 'username',\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                render (sex) {\n                    return sex === 1 ? \"男\" : \"女\"\n                }\n            },\n            {\n                title: '年龄',\n                dataIndex: 'age',\n                sorter: (a, b) => {\n                    return a.age - b.age\n                },\n                sortOrder: this.state.sortOrder\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                render (state) {\n                    let config = {\n                        \"1\": \"咸鱼一条\",\n                        \"2\": \"风华浪子\",\n                        \"3\": \"北大才子\",\n                        \"4\": \"百度FE\",\n                        \"5\": \"创业者\",\n                    }\n                    return config[state]\n                }\n            },\n            {\n                title: '爱好',\n                dataIndex: 'interest',\n                render (interest) {\n                    let config = {\n                        \"1\": <Badge status=\"success\" text=\"成功\"/>,\n                        \"2\": <Badge status=\"error\" text=\"报错\"/>,\n                        \"3\": <Badge status=\"default\" text=\"正常\"/>,\n                        \"4\": <Badge status=\"processing\" text=\"进行中\"/>,\n                        \"5\": <Badge status=\"warning\" text=\"警告\"/>,\n                        \"6\": <Badge status=\"warning\" text=\"警告\"/>,\n                        \"7\": <Badge status=\"warning\" text=\"警告\"/>,\n                        \"8\": <Badge status=\"warning\" text=\"警告\"/>,\n                    }\n                    return config[interest]\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday',\n            },\n            {\n                title: '地址',\n                dataIndex: 'address',\n            },\n            {\n                title: '操作',\n                render: (text, item) => {\n                    return <Button size=\"small\" type=\"primary\" onClick={() => this.handleDelete(item)}>删除</Button>\n                }\n            }\n        ]\n        return (\n            <div>\n                <Card title=\"头部固定\">\n                    <Table\n                        bordered\n                        pagination={false}\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                        scroll={{y:400}}\n                    />\n                </Card>\n                <Card title=\"左侧固定\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        columns={columns2}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                        scroll={{ x: 1600 }}\n                    />\n                </Card>\n                <Card title=\"年龄排序\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        columns={columns3}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                        onChange={this.handleChange}\n                    />\n                </Card>\n                <Card title=\"操作按钮\" style={{margin: '10px 0'}}>\n                    <Table\n                        bordered\n                        columns={columns4}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                    />\n                </Card>\n            </div>\n        )\n    }\n}","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/chinaprovincecity.js",["232","233","234","235","236","237"],"import React from 'react';\nimport { Button, Modal } from 'antd';\nimport './AreaModal/index.less';\nimport Area from \"./AreaModal/Area\";\nimport { cityeCodes } from './AreaModal/china-data'\n\nconst newCityCodes = [];\nlet totalArea = 0;\ncityeCodes.forEach(areaitem => {\n    const areaItem = {};\n    areaItem.areaCode = areaitem.code;\n    areaItem.areaName = areaitem.name;\n    areaItem.total = 0;\n    areaItem.children = [];\n\n    areaitem.child instanceof Array &&\n        areaitem.child.forEach(provinceitem => {\n            const provinceItem = {};\n            provinceItem.provinceCode = provinceitem.code;\n            provinceItem.provinceName = provinceitem.name;\n            provinceItem.areaCode = areaitem.code;\n            provinceItem.areaName = areaitem.name;\n            provinceItem.total = 0;\n            provinceItem.children = [];\n\n            provinceitem.child instanceof Array &&\n                provinceitem.child.forEach(cityitem => {\n                    const cityItem = {};\n                    cityItem.cityCode = cityitem.code;\n                    cityItem.cityName = cityitem.name;\n                    cityItem.provinceName = provinceitem.name;\n                    cityItem.provinceCode = provinceitem.code;\n                    cityItem.areaCode = areaitem.code;\n                    cityItem.areaName = areaitem.name;\n                    cityItem.children = [];\n\n                    cityitem.child instanceof Array && cityitem.child.forEach(countyitem => {\n                        const countyItem = {};\n                        countyItem.countyCode = countyitem.code;\n                        countyItem.countyName = countyitem.name;\n                        countyItem.cityCode = cityitem.code;\n                        countyItem.cityName = cityitem.name;\n                        countyItem.provinceName = provinceitem.name;\n                        countyItem.provinceCode = provinceitem.code;\n                        countyItem.areaCode = areaitem.code;\n                        countyItem.areaName = areaitem.name;\n                        cityItem.children.push(countyItem)\n                    })\n                    provinceItem.total = provinceItem.total + cityItem.children.length;\n                    provinceItem.children.push(cityItem);\n                });\n            areaItem.total = areaItem.total + provinceItem.children.length;\n            areaItem.children.push(provinceItem);\n        })\n    newCityCodes.push(areaItem);\n    totalArea = totalArea + areaItem.total;\n});\n\n\nexport default class ChinaProviceCity extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShowAreaDialog: false,\n            // new 新的参数\n            allCityeCodes: null,\n            areaOrigin: {},\n            cateOrigin: {},\n            checkAll: false,\n            // newData: this.props.chinaCityInfoList,\n            chinaCityInfoList: []\n        }\n    }\n\n    componentDidMount() {\n        this.formateData();\n    }\n\n    formateData = () => {\n        // cityCodes 需要修改为正确的数值，此为本地开发测试\n        const { type, data = cityeCodes } = this.props;\n        const { checkAll } = this.state\n        // console.log(this.props.chinaCityInfoList, 'formateData props')\n        console.log(newCityCodes, 'formate newCityCodes')\n        let areaOrigin = []\n        if (checkAll) {\n            areaOrigin = newCityCodes.reduce((curArea, areaItem) => {\n                const provinceObj = areaItem.child.reduce((curProvince, provinceItem) => {\n                    const cityObj = provinceItem.child.reduce((curCity, cityItem) => {\n                        // console.log(curCity, 'log cur City ')\n                        const countyObj = cityItem.child.reduce((curCounty, countyItem) => {\n                            curCounty[countyItem.code] = {\n                                countyCode: countyItem.code,\n                                countyName: countyItem.name,\n                                father: cityItem,\n                            }\n                            return curCounty;\n                        }, {});\n                        curCity[cityItem.code] = {\n                            cityCode: cityItem.code,\n                            cityName: cityItem.name,\n                            countyObj,\n                            father: provinceItem,\n                        }\n                        return curCity\n                    }, {});\n                    curProvince[provinceItem.code] = {\n                        provinceCode: provinceItem.code,\n                        provinceName: provinceItem.name,\n                        cityObj,\n                        father: areaItem,\n                    }\n                    return curProvince;\n                }, {});\n                curArea[areaItem.code] = {\n                    areaCode: areaItem.code,\n                    areaName: areaItem.name,\n                    provinceObj\n                }\n                return curArea;\n            }, {})\n            console.log(areaOrigin, '11 areaOrigin')\n        } else {\n            console.log(data, Array.isArray(data), 'get data')\n            areaOrigin = data.reduce((curArea, areaItem) => {\n                /*\n                    areaItem = {\n                        child: [],\n                        name: '',\n                        code: 0,\n                    }\n                */\n                const provinceObj = areaItem.child.reduce((curProvince, provinceItem) => {\n                    const cityObj = provinceItem.child.reduce((curCity, cityItem) => {\n                        console.log(curCity, 'log cur City 2222')\n                        const areaObj = cityItem.child.reduce((curCounty, countyItem) => {\n                            curCounty[countyItem.code] = {\n                                countyCode: countyItem.code,\n                                countyName: countyItem.name,\n                                father: cityItem,\n                            }\n                            return curCounty;\n                        }, {});\n                        curCity[cityItem.code] = {\n                            cityCode: cityItem.code,\n                            cityName: cityItem.name,\n                            areaObj,\n                            father: provinceItem,\n                        }\n                        return curCity\n                    }, {});\n                    curProvince[provinceItem.code] = {\n                        provinceCode: provinceItem.code,\n                        provinceName: provinceItem.name,\n                        cityObj,\n                        father: areaItem,\n                    }\n                    return curProvince;\n                }, {});\n                curArea[areaItem.code] = {\n                    areaCode: areaItem.code,\n                    areaName: areaItem.name,\n                    provinceObj\n                }\n                return curArea;\n            }, {})\n            console.log(areaOrigin, '22 areaOrigin')\n        }\n\n        this.setState(() => ({\n            areaOrigin, checkAll\n        }))\n    }\n\n\n\n    /**\n     * 子组件更新父组件state\n     */\n    upDataParentState = (obj, cb) => {\n        this.setState(obj, cb);\n    };\n\n    handleButton = () => {\n        this.setState({\n            isShowAreaDialog: true\n        })\n    }\n\n    onCancel = () => {\n        this.setState({\n            isShowAreaDialog: false\n        })\n    }\n\n    handleOK = () => {\n\n    }\n\n    render() {\n        const { type, cancelArea, groupID, loading } = this.props;\n        const { areaOrigin, checkAll, chinaCityInfoList, isShowAreaDialog } = this.state;\n\n        return (\n            <div>\n                <Button type=\"primary\" onClick={this.handleButton}>Primary Button</Button>\n                <Modal\n                    title=\"地区选择\"\n                    visible={isShowAreaDialog}\n                    onCancel={this.onCancel}\n                    onOk={this.handleOK}\n                    width={680}\n                    okText=\"保存\"\n                >\n                    <div className=\"content_wrap\">\n                        <Area\n                            data={areaOrigin}\n                            upDataParentState={this.upDataParentState}\n                            checkAll={checkAll}\n                            newCityCodes={newCityCodes}\n                        />\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/AreaModal/Area.jsx",["238","239","240","241","242","243","244"],"import React, { Component } from \"react\";\nimport { Checkbox } from \"antd\";\n\nexport default class Area extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeArea: 0,\n            activeAreaCode: 1,\n            activeAreaName: '华东',\n            activeProvince: 0,\n            activeProvinceCode: 31,\n            activeProvinceName: '上海市',\n            activeCity: 0,\n            activeCityCode: 3101,\n            activeCityName: '上海市',\n        };\n    }\n\n\n    /**\n    * 点击行\n    */\n    onclickItem = (type, index, code, name) => {\n        const { newCityCodes = [] } = this.props;\n        if (type === \"area\") {\n            // console.log( index, code, name)\n            console.log('area')\n            this.setState(() => ({\n                activeArea: index + 1, // 加1是因为 activeArea 索引从1开始\n                activeAreaCode: code,\n                activeAreaName: name,\n                activeProvince: 0,\n                activeProvinceCode: newCityCodes[index].children[0].provinceCode,\n                activeProvinceName: newCityCodes[index].children[0].provinceCode,\n                activeCity: 0,\n                activeCityCode: newCityCodes[index].children[0].children[0].cityCode,\n                activeCityName: newCityCodes[index].children[0].children[0].cityName\n            }))\n        } else if (type === 'province') {\n            console.log('province')\n            // console.log(newCityCodes[index].children[0], 'child info')\n            this.setState(() => ({\n                activeProvince: index,\n                activeProvinceCode: code,\n                activeProvinceName: name,\n                activeCity: 0,\n                activeCityCode: newCityCodes[index].children[0].children[0].cityCode,\n                activeCityName: newCityCodes[index].children[0].children[0].cityName\n            }))\n        } else if (type === 'city') {\n            // console.log( index, code, name)\n            console.log(newCityCodes, code, name, 'new CityCodes ')\n            this.setState(() => ({\n                activeCity: index,\n                activeCityCode: code,\n                activeCityName: name\n            }))\n        }\n    }\n\n    /**\n     * 选择全国\n     */\n    checkAll = (e) => {\n        e.stopPropagation();\n        const checked = e.target.checked;\n        console.log('checked fired', checked)\n        this.props.upDataParentState((state) => {\n            let { areaOrigin } = state\n            if (checked) {\n                // 选择全国的话，newCityCodes 取的是包含所有大区的数组\n                const { newCityCodes = [] } = this.props;\n                areaOrigin = newCityCodes.reduce((curArea, areaItem) => {\n                    // provinceObj 取的是包含所有省份的数组\n                    const provinceObj = areaItem.children.reduce((curProvince, provinceItem) => {\n                        // cityObj 包含该省份下的所有城市的数组\n                        const cityObj = provinceItem.children.reduce((curCity, cityItem) => {\n                            // countyObj 包含该城市下的所有区域的数组\n                            const countyObj = cityItem.children.reduce((curCounty, countyItem) => {\n                                curCounty[countyItem.countyCode] = countyItem\n                                return curCounty;\n                            }, {});\n                            curCity[cityItem.cityCode] = {\n                                cityCode: cityItem.cityCode,\n                                cityName: cityItem.cityName,\n                                countyObj\n                            }\n                            return curCity\n                        }, {});\n                        curProvince[provinceItem.provinceCode] = {\n                            provinceCode: provinceItem.provinceCode,\n                            provinceName: provinceItem.provinceName,\n                            cityObj\n                        }\n                        return curProvince;\n                    }, {});\n                    curArea[areaItem.areaCode] = {\n                        areaCode: areaItem.areaCode,\n                        areaName: areaItem.areaName,\n                        provinceObj\n                    }\n                    return curArea;\n                }, {})\n\n            } else {\n                areaOrigin = {}\n            }\n            console.log('全国：areaOrigin', areaOrigin)\n            return Object.assign(state, { areaOrigin, checkAll: checked })\n        })\n\n    }\n\n    /**\n     *  选择大区 \n     */\n    checkArea = (e, item, index) => {\n        console.log(e, item, index, '点中的大区信息')\n        // console.log('大区')\n        e.stopPropagation();\n        const checked = e.target.checked;\n        console.log(checked, 'checked')\n\n        this.props.upDataParentState(({ areaOrigin }) => {\n            if (checked) {\n                const { newCityCodes = [] } = this.props;\n                console.log( newCityCodes[index].children, 'get infos')\n                const provinceObj = newCityCodes[index].children.reduce((curProvince, provinceItem) => {\n                    const cityObj = provinceItem.children.reduce((curCity, cityItem) => {\n                        const countyObj = cityItem.children.reduce((curCounty, countyItem) => {\n                            curCounty[countyItem.countyCode] = countyItem;\n                            // console.log(curCounty, 'county')\n                            return curCounty;\n                        }, {});\n                        curCity[cityItem.cityCode] = {\n                            cityCode: cityItem.cityCode,\n                            cityName: cityItem.cityName,\n                            countyObj\n                        }\n                        // console.log(curCity, 'city')\n                        return curCity;\n                    }, {});\n                    curProvince[provinceItem.provinceCode] = {\n                        provinceCode: provinceItem.provinceCode,\n                        provinceName: provinceItem.provinceName,\n                        cityObj\n                    }\n                    // console.log(curProvince, 'province')\n                    return curProvince\n                }, {});\n                areaOrigin[item.areaCode] = {\n                    areaCode: item.areaCode,\n                    areaName: item.areaName,\n                    provinceObj\n                }\n            } else {\n                console.log('大区勾选取消')\n                // console.log(areaOrigin[item.areaCode], 'info-kk')\n                delete areaOrigin[item.areaCode];\n            }\n            console.log('大区：areaOrigin', areaOrigin)\n            return { areaOrigin, checkAll: false }\n        })\n    }\n\n    /**\n     * 选择省份 \n     */\n    checkProvince = (e, item, index) => {\n        // console.log('省份')\n        e.stopPropagation();\n        const checked = e.target.checked;\n        const { activeArea, activeAreaCode, activeAreaName, activeProvince, activeProvinceCode, activeProvinceName } = this.state;\n        this.props.upDataParentState(({ areaOrigin }) => {\n            console.log(item, index, areaOrigin, 'log check province all data')\n            if (checked) {\n                const { newCityCodes = [] } = this.props;\n                const cityList = newCityCodes[activeArea].children[index].children;\n\n                if (areaOrigin[activeAreaCode]) {\n                    if (areaOrigin[activeAreaCode].provinceObj[item.provinceCode]) {\n                        areaOrigin[activeAreaCode].provinceObj[item.provinceCode].cityObj = cityList.reduce((curCity, cityItem) => {\n                            console.log(cityItem, 'log city item 1111')\n                            curCity[cityItem.cityCode] = cityItem\n                            return curCity;\n                        }, {})\n                    } else {\n                        const cityObj = cityList.reduce((curCity, cityItem) => {\n                            curCity[cityItem.cityCode] = cityItem\n                            return curCity;\n                        }, {});\n                        areaOrigin[activeAreaCode].provinceObj[item.provinceCode] = {\n                            provinceCode: item.provinceCode,\n                            provinceName: item.provinceName,\n                            cityObj\n                        }\n                    }\n                } else {\n                    const cityObj = cityList.reduce((curCity, cityItem) => {\n                        curCity[cityItem.cityCode] = cityItem\n                        return curCity;\n                    }, {})\n                    areaOrigin[activeAreaCode] = {\n                        areaName: activeAreaName,\n                        areaCode: activeAreaCode,\n                        provinceObj: {\n                            [item.provinceCode]: {\n                                provinceCode: item.provinceCode,\n                                provinceName: item.provinceName,\n                                cityObj\n                            }\n                        }\n                    }\n                }\n            } else {\n                console.log('省份勾选取消')\n                const provinceObj = areaOrigin[activeAreaCode].provinceObj;\n                delete provinceObj[item.provinceCode];\n                if (Object.keys(provinceObj).length === 0) {\n                    delete areaOrigin[activeArea];\n                }\n            }\n            console.log('省份：areaOrigin', areaOrigin)\n            return { areaOrigin, checkAll: false }\n        });\n    }\n\n    /**\n     * 选择城市 \n     */\n    checkCity = (e, item, index) => {\n        // console.log('城市', e, item , index)\n        // console.log(areaOrigin[activeAreaCode], 'areaOrigin[activeAreaCode]')\n        const checked = e.target.checked;\n        const { activeArea, activeAreaCode, activeAreaName, activeProvince, activeProvinceCode, activeProvinceName } = this.state;\n        this.props.upDataParentState((state) => {\n            let { areaOrigin } = state\n\n            if (checked) {\n                const { newCityCodes = [] } = this.props;\n                console.log(item, 'log city all data')\n                const countyList = newCityCodes[activeArea].children[activeProvince].children[index].children;\n\n                console.log( areaOrigin, areaOrigin, areaOrigin, activeProvinceCode,'get city111')\n\n                if (areaOrigin[areaOrigin]) {\n                    if (areaOrigin[activeAreaCode].provinceObj) {\n                        if (areaOrigin[activeAreaCode].areaOrigin[activeProvinceCode]) {\n                            if(areaOrigin[activeAreaCode].provinceObj[activeProvinceCode].cityObj) {\n                                areaOrigin[activeAreaCode].provinceObj[activeProvinceCode].cityObj[item.cityCode].countyObj = countyList.reduce((curCounty,countyItem) => {\n                                    curCounty[countyItem.countyCode] = countyItem;\n                                    return curCounty;\n                                }, {})\n                            } else {\n                                const countyObj = countyList.reduce((curCounty,countyItem) => {\n                                    curCounty[countyItem.countyCode] = countyItem;\n                                    return curCounty;\n                                }, {})\n                                areaOrigin[activeAreaCode].provinceObj[activeProvinceCode].cityObj[item.cityCode] = {\n                                    cityCode: item.cityCode,\n                                    cityName: item.cityName,\n                                    countyObj\n                                }\n                            }\n                            \n                        } else {\n                            areaOrigin[activeAreaCode].provinceObj[activeProvinceCode] = {\n                                provinceName: activeProvinceName,\n                                provinceCode: activeProvinceCode,\n                                cityObj: {\n                                    [item.cityCode]: item\n                                }\n                            }\n                        }\n                    } else {\n                        areaOrigin[activeAreaCode].provinceObj = {\n                            areacode: activeAreaCode,\n                            areaName: activeAreaName,\n                            provinceObj: {\n                                [item.provinceCode]: item\n                            }\n                        }\n                    }\n                } else {\n                    // 作用是当areaOrigin 没有数据时赋予新的数值\n                    console.log(countyList, 'county item bbbbbbbbb hhhh')\n                    const countyObj = countyList.reduce((curCounty, countyItem, index) => {\n                        curCounty[countyItem.countyCode] = countyItem;\n                        return curCounty;\n                    }, {})\n                    // TODO hack 此处加1是因为activeArea索引是从0开始 与数据不符\n                    areaOrigin[activeArea + 1] = {\n                        areaName: activeAreaName,\n                        areaCode: activeAreaCode,\n                        provinceObj: {\n                            [activeProvince]: {\n                                provinceCode: activeProvinceCode,\n                                provinceName: activeProvinceName,\n                                cityObj: {\n                                    [item.cityCode]: {\n                                        cityCode: item.cityCode,\n                                        cityName: item.cityName,\n                                        countyObj,\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            } else {\n                console.log('城市勾选取消')\n                // todo 没有勾选城市的处理\n                const cityObj = areaOrigin[activeAreaCode].provinceObj[activeProvinceCode].cityObj;\n                console.log(cityObj, 'get cityObj')\n                delete cityObj[item.cityCode];\n                if (Object.keys(cityObj).length === 0) {\n                    delete areaOrigin[activeAreaCode].provinceObj[activeProvinceCode];\n                    if (Object.keys(areaOrigin[activeAreaCode].provinceObj).length === 0) {\n                        delete areaOrigin[activeAreaCode]\n                    }\n                }\n            }\n            console.log(areaOrigin, checked, 'area origin is what')\n            return Object.assign(state, { areaOrigin, checkAll: checked });\n        });\n    }\n\n    /**\n     * 选择区域 \n     */\n    checkCounty = (e, item, index) => {\n        // console.log('区域')\n        const checked = e.target.checked;\n        const { activeAreaCode, activeAreaName, activeProvinceCode, activeProvinceName, activeCityCode, activeCityName } = this.state;\n        this.props.upDataParentState(({ areaOrigin }) => {\n            if (checked) {\n                if (areaOrigin[activeAreaCode]) {\n                    if (areaOrigin[activeAreaCode].provinceObj) {\n                        if (areaOrigin[activeAreaCode].provinceObj[activeProvinceCode]) {\n                            if(areaOrigin[activeAreaCode].provinceObj[activeProvinceCode].cityObj) {\n                                if(areaOrigin[activeAreaCode].provinceObj[activeProvinceCode].cityObj[activeCityCode]) {\n                                    areaOrigin[activeAreaCode].provinceObj[activeProvinceCode].cityObj[activeCityCode].areaObj[item.areaCode] = item;\n                                }else {\n                                    areaOrigin[activeAreaCode].provinceObj[activeProvinceCode].cityObj[activeCityCode] = {\n                                        cityCode: activeCityCode,\n                                        cityName: activeCityName,\n                                        areaObj: {\n                                            [item.areaCode]: item\n                                        }\n                                    }\n                                }\n                            }else {\n                                areaOrigin[activeAreaCode].provinceObj[activeProvinceCode].cityObj = {\n                                    [activeCityCode]: {\n                                        cityCode: activeCityCode,\n                                        cityName: activeCityName,\n                                        areaObj: {\n                                            [item.areaCode]: item\n                                        }\n                                    }\n                                }\n                            }\n                        } else {\n                            areaOrigin[activeProvinceCode] = {\n                                provinceName: activeProvinceName,\n                                provinceCode: activeProvinceCode,\n                                cityObj: {\n                                    [activeCityCode]: {\n                                        cityCode: activeCityCode,\n                                        cityName: activeCityName,\n                                        areaObj: {\n                                            [item.areaCode]: item\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    } else {\n                        areaOrigin[activeAreaCode].provinceObj = {\n                            [activeProvinceCode]: {\n                                provinceName: activeProvinceName,\n                                provinceCode: activeProvinceCode,\n                                cityObj: {\n                                    [activeCityCode]: {\n                                        cityCode: activeCityCode,\n                                        cityName: activeCityName,\n                                        areaObj: {\n                                            [item.areaCode]: item\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    areaOrigin[activeAreaCode] = {\n                        [activeAreaCode]: {\n                            areaCode: activeAreaCode,\n                            areaName: activeAreaName,\n                            provinceObj: {\n                                [activeProvinceCode]: {\n                                    provinceName: activeProvinceName,\n                                    provinceCode: activeProvinceCode,\n                                    cityObj: {\n                                        [activeCityCode]: {\n                                            cityCode: activeCityCode,\n                                            cityName: activeCityName,\n                                            areaObj: {\n                                                [item.areaCode]: item\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                return { areaOrigin }\n            } else {\n                //todo 没处理\n                const areaObj = areaOrigin[activeProvinceCode].cityObj[activeCityCode].areaObj;\n                delete areaObj[item.areaCode];\n                if (Object.keys(areaObj).length === 0) {\n                    delete areaOrigin[activeProvinceCode].cityObj[activeCityCode];\n                    if (Object.keys(areaOrigin[activeProvinceCode].cityObj).length === 0) {\n                        delete areaOrigin[activeProvinceCode];\n                    }\n                }\n            }\n            return { areaOrigin, checkAll: false };\n        });\n    }\n\n    render() {\n        const { data = {}, checkAll, newCityCodes = [] } = this.props;\n        // console.log(this.props, 'inner props')\n        // console.log(data, 'data =>', checkAll, 'checkAll=>')\n        const { activeArea, activeProvince, activeCity, activeAreaCode, activeProvinceCode, activeCityCode, chinaCityInfoList } = this.state;\n\n        const areaObj = data[activeAreaCode] || {}\n        const provinceObj = areaObj.provinceObj || {}\n        const city = provinceObj[activeProvinceCode] || {}\n        const cityObj = city.cityObj || {}\n        const county = cityObj[activeCityCode] || {}\n        console.log(county, 'log county 00000')\n        const countyObj = county.countyObj || {}\n        return (\n            <div className=\"area_wrap\">\n\n                <div className=\"area_zero\">\n                    <div>\n                        <Checkbox\n                            checked={checkAll}\n                            onChange={e => this.checkAll(e)}\n                            // indeterminate={selectAreaTotal > 0 && totalArea !== selectAreaTotal}\n                        >\n                            全国\n                        </Checkbox>\n                    </div>\n                \n                    {/* 大区勾选 */}\n                    <div style={{ marginLeft: 10 }}>\n                        {console.log(newCityCodes, '大区勾选')}\n                        {\n                            newCityCodes.map(({ areaName, areaCode, total }, index) => {\n                                console.log({ areaName, areaCode, total }, 'info---')\n\n                                let selectTotal = 0;\n                                if (data[areaCode] && data[areaCode].provinceObj) {\n                                    const provinceObj = data[areaCode].provinceObj;\n                                    Object.keys(provinceObj).forEach((key) => {\n                                        if (typeof provinceObj[key] === 'object' && typeof provinceObj[key].cityObj === 'object') {\n                                            selectTotal = selectTotal + Object.keys(provinceObj[key].cityObj).length\n                                        }\n                                    })\n                                }\n                                let provinceNum = 0;\n                                if (data[areaCode] && data[areaCode].provinceObj) {\n                                    const provinceArr = Object.keys(data[areaCode].provinceObj);\n                                    provinceNum = provinceArr.length;\n                                }\n                                const active = index == activeArea;\n                                console.log(total, selectTotal, areaName,'get num info')\n                                return (\n                                    <div key={areaCode} className={active ? \"p_item_active\" : \"p_item\"} onClick={() => { this.onclickItem('area', index, areaCode, areaName) }}>\n                                        <Checkbox\n                                            checked={total === selectTotal}\n                                            onChange={e => this.checkArea(e, { areaName, areaCode }, index)}\n                                            indeterminate={selectTotal > 0 && total !== selectTotal}\n                                        />\n                                        <span className={\"name_normal\"}>\n                                            <span className={!active ? \"title\" : 'title_active'}>{areaName}</span><span className={!active ? \"area_num\" : \"area_num_active\"}>{`(${provinceNum})`}</span>\n                                        </span>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n\n                {/* 省份勾选 */}\n                <div className=\"area_second\">\n                    {console.log(newCityCodes[activeArea].children, '省份内容')}\n                    {/* {newCityCodes[activeArea].children[activeProvince].children[activeCity]} */}\n                    {\n                        newCityCodes[activeArea].children.map(( { provinceName, provinceCode, children }, index ) => {\n                            console.log(areaObj,provinceObj, data, 'cityObj==')\n                            const provinceArr = provinceObj ? Object.keys(provinceObj) : [];\n                            const indeterminate = provinceArr.length > 0 && provinceArr.length !== children.length\n\n                            const active = index == activeProvince;\n\n                            return (\n                                <div key={provinceCode}  className={active ? \"c_item_active\" : \"c_item\"}>\n                                    <Checkbox \n                                        checked={provinceArr.length === children.length}\n                                        onChange={e => this.checkProvince(e, { provinceName, provinceCode }, index)}\n                                        indeterminate={indeterminate}\n                                    />\n                                    <span className={\"name_normal\"} onClick={() => { this.onclickItem('province', index, provinceCode, provinceName) }}>\n                                        <span className={!active ? \"title\" : 'title_active'}>{provinceName}</span><span className={!active ? \"area_num\" : \"area_num_active\"}>{`(${provinceArr.length || 0})`}</span>\n                                    </span>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n\n                {/* 市勾选 */}\n                <div className=\"area_third\">\n                    {/* {console.log(newCityCodes[activeArea].children[activeProvince].children, '第三')} */}\n                    {/* {newCityCodes[activeArea].children[activeProvince].children.map} */}\n                    {\n                        newCityCodes[activeArea].children[activeProvince].children.map(({ cityCode, cityName, children }, index,) => {\n                            const areaArr = countyObj ? Object.keys(countyObj) : [];\n                            console.log(areaArr, children, countyObj, 'children area arr')\n                            // 根据areaArr.length 和 children.length判断是否checked方式不准确\n                            const indeterminate = areaArr.length > 0 && areaArr.length !== children.length;\n                            const active = index == activeCity;\n                            return (\n                                <div key={cityCode} className={active ? \"c_item_active\" : \"c_item\"} >\n                                    <Checkbox\n                                        checked={areaArr.length === children.length}\n                                        onChange={e => this.checkCity(e, { cityCode, cityName, provinceObj }, index)}\n                                        indeterminate={indeterminate}\n                                    />\n                                    <span className={\"name_normal\"} onClick={() => { this.onclickItem('city', index, cityCode, cityName) }}>\n                                        <span className={!active ? \"title\" : 'title_active'}>{cityName}</span><span className={!active ? \"area_num\" : \"area_num_active\"}>{`(${areaArr.length || 0})`}</span>\n                                    </span>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n\n                {/* 区勾选 */}\n                <div className=\"area_third\">\n                    {\n                        // newCityCodes[activeArea].children[activeProvince].children[activeCity].children\n                        newCityCodes[activeArea].children[activeProvince].children[activeCity].children.map(({ countyCode, countyName, }, index) => {\n                            // console.log('%c 🍆 countyObj: ', 'font-size:20px;background-color: #B03734;color:#fff;', countyObj);\n                            // console.log( newCityCodes, 'info')\n\n                            console.log(countyObj, countyCode, 'log county info')\n                            const checked = countyObj ? Object.keys(countyObj).includes(countyCode + '') : false;\n                            return (\n                                <div key={countyCode} className=\"c_item\">\n                                    <Checkbox\n                                        checked={checked}\n                                        onChange={(e) => this.checkCounty(e, { countyCode, countyName }, index)}\n                                    />\n                                    <span className={\"name_normal\"}>\n                                        <span className=\"title\">{countyName}</span>\n                                    </span>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\n","/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/AreaModal/china-data.js",[],"/Users/zhaoxin/Desktop/project/admin-bike/src/pages/form/AreaModal/index.jsx",["245","246","247","248","249","250"],"import React from 'react';\nimport { Modal } from 'antd';\nimport Area from \"../AreaModal/Area\";\n// import { chinaData } from './china-data.js';\nimport '../AreaModal/index.less';\n// import { cityeCodes } from \"../../../../utils/ChinaCityCode\";\nimport { cityeCodes } from '../AreaModal/china-data'\n\nconst newCityCodes = [];\nlet totalArea = 0;\ncityeCodes.forEach(areaitem => {\n    const areaItem = {};\n    areaItem.areaCode = areaitem.code;\n    areaItem.areaName = areaitem.name;\n    areaItem.total = 0;\n    areaItem.children = [];\n\n    areaitem.child instanceof Array &&\n        areaitem.child.forEach(provinceitem => {\n            const provinceItem = {};\n            provinceItem.provinceCode = provinceitem.code;\n            provinceItem.provinceName = provinceitem.name;\n            provinceItem.areaCode = areaitem.code;\n            provinceItem.areaName = areaitem.name;\n            provinceItem.total = 0;\n            provinceItem.children = [];\n\n            provinceitem.child instanceof Array &&\n                provinceitem.child.forEach(cityitem => {\n                    const cityItem = {};\n                    cityItem.cityCode = cityitem.code;\n                    cityItem.cityName = cityitem.name;\n                    cityItem.provinceName = provinceitem.name;\n                    cityItem.provinceCode = provinceitem.code;\n                    cityItem.areaCode = areaitem.code;\n                    cityItem.areaName = areaitem.name;\n                    cityItem.children = [];\n\n                    cityitem.child instanceof Array && cityitem.child.forEach(countyitem => {\n                        const countyItem = {};\n                        countyItem.countyCode = countyitem.code;\n                        countyItem.countyName = countyitem.name;\n                        countyItem.cityCode = cityitem.code;\n                        countyItem.cityName = cityitem.name;\n                        countyItem.provinceName = provinceitem.name;\n                        countyItem.provinceCode = provinceitem.code;\n                        countyItem.areaCode = areaitem.code;\n                        countyItem.areaName = areaitem.name;\n                        cityItem.children.push(countyItem)\n                    })\n                    provinceItem.total = provinceItem.total + cityItem.children.length;\n                    provinceItem.children.push(cityItem);\n                });\n                areaItem.total = areaItem.total + provinceItem.children.length;\n                areaItem.children.push(provinceItem);\n        })\n    newCityCodes.push(areaItem);\n    totalArea = totalArea + areaItem.total;\n});\nexport default class AreaModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            // new 新的参数\n            allCityeCodes: null,\n            areaOrigin: {},\n            cateOrigin: {},\n            checkAll: false,\n            // newData: this.props.chinaCityInfoList,\n            chinaCityInfoList: []\n        }\n    }\n\n    componentDidMount() {\n        this.formateData();\n    }\n\n    formateData = () => {\n        // cityCodes 需要修改为正确的数值，此为本地开发测试\n        const { type, data = cityeCodes } = this.props;\n        const { checkAll } = this.state\n        // console.log(this.props.chinaCityInfoList, 'formateData props')\n        console.log(newCityCodes, 'formate newCityCodes')\n        // if(type === 'area') {\n            let areaOrigin = []\n            if(checkAll) {\n                areaOrigin = newCityCodes.reduce((curArea, areaItem) => {\n                    const provinceObj = areaItem.child.reduce((curProvince, provinceItem) => {\n                        const cityObj = provinceItem.child.reduce((curCity, cityItem) => {\n                            // console.log(curCity, 'log cur City ')\n                            const countyObj = cityItem.child.reduce((curCounty, countyItem) => {\n                                curCounty[countyItem.code] = {\n                                    countyCode: countyItem.code,\n                                    countyName: countyItem.name,\n                                    father: cityItem,\n                                }\n                                return curCounty;\n                            }, {});\n                            curCity[cityItem.code] = {\n                                cityCode: cityItem.code,\n                                cityName: cityItem.name,\n                                countyObj,\n                                father: provinceItem,\n                            }\n                            return curCity\n                        }, {});\n                        curProvince[provinceItem.code] = {\n                            provinceCode: provinceItem.code,\n                            provinceName: provinceItem.name,\n                            cityObj,\n                            father: areaItem,\n                        }\n                        return curProvince;\n                    }, {});\n                    curArea[areaItem.code] = {\n                        areaCode: areaItem.code,\n                        areaName: areaItem.name,\n                        provinceObj\n                    }\n                    return curArea;\n                }, {})\n                console.log(areaOrigin, '11 areaOrigin')\n            }else {\n                console.log(data, Array.isArray(data), 'get data')\n                areaOrigin = data.reduce((curArea, areaItem) => {\n                    /*\n                     areaItem = {\n                         child: [],\n                         name: '',\n                         code: 0,\n                        }\n                    */\n                    const provinceObj = areaItem.child.reduce((curProvince, provinceItem) => {\n                        const cityObj = provinceItem.child.reduce((curCity, cityItem) => {\n                            console.log(curCity, 'log cur City 2222')\n                            const areaObj = cityItem.child.reduce((curCounty, countyItem) => {\n                                curCounty[countyItem.code] = {\n                                    countyCode: countyItem.code,\n                                    countyName: countyItem.name,\n                                    father: cityItem,\n                                }\n                                return curCounty;\n                            }, {});\n                            curCity[cityItem.code] = {\n                                cityCode: cityItem.code,\n                                cityName: cityItem.name,\n                                areaObj,\n                                father: provinceItem,\n                            }\n                            return curCity\n                        }, {});\n                        curProvince[provinceItem.code] = {\n                            provinceCode: provinceItem.code,\n                            provinceName: provinceItem.name,\n                            cityObj,\n                            father: areaItem,\n                        }\n                        return curProvince;\n                    }, {});\n                    curArea[areaItem.code] = {\n                        areaCode: areaItem.code,\n                        areaName: areaItem.name,\n                        provinceObj\n                    }\n                    return curArea;\n                }, {})\n                console.log(areaOrigin, '22 areaOrigin')\n            }\n            \n            this.setState(() => ({\n                areaOrigin, checkAll\n            }))\n        // }\n    }\n\n    /**\n     * 子组件更新父组件state\n     */\n    upDataParentState = (obj,cb) => {\n        this.setState(obj,cb);\n    };\n\n    handleOK = () => {\n        // const { areaOrigin, cateOrigin, checkAll } = this.state;\n        // console.log(areaOrigin, 'areaOrigin')\n        // const result = [];\n        // if(!checkAll) {\n        //     Object.keys(areaOrigin).forEach((areaKey) => {\n        //         const { areaName, areaCode, provinceObj = {}} = areaOrigin[areaKey];\n        //         const provinceList = [];\n        //         Object.keys(provinceObj).forEach((provinceKey) => {\n        //             const { provinceName, provinceCode, cityObj = {} } = provinceObj[provinceKey];\n        //             const cityList = [];\n        //             Object.keys(cityObj).forEach((cityKey) => {\n        //                 const { cityName, cityCode, countyObj = {} } = provinceObj[cityKey];\n        //                 const countyList = [];\n        //                 Object.keys(countyObj).forEach((countyKey) => {\n        //                     const { countyCode, countyName } = countyObj[countyKey];\n        //                     countyCode && countyList.push({\n        //                         countyCode,\n        //                         countyName\n        //                     })\n        //                 })\n        //                 cityCode && cityList.push({\n        //                     cityCode,\n        //                     cityName,\n        //                     countyList\n        //                 })\n        //             })\n        //             provinceCode && provinceList.push({\n        //                 provinceCode,\n        //                 provinceName,\n        //                 cityList\n        //             })\n        //         })\n        //         areaCode && areaList.push({\n        //             areaCode,\n        //             areaName,\n        //             areaList\n        //         })\n        //     })\n        // }\n        // this.props.onOk(result,checkAll );\n    }\n\n    render () {\n        // const { isShowAreaDialog, cancelArea, chinaCityInfoList } = this.props;\n        const { type, isShowAreaDialog, cancelArea, groupID, loading } = this.props;\n        const { areaOrigin, cateOrigin, checkAll, chinaCityInfoList } = this.state;\n        // console.log(chinaCityInfoList, 'default chinaCityInfoList')\n        return (\n            <Modal\n                title=\"地区选择\"\n                visible={isShowAreaDialog}\n                onCancel={cancelArea}\n                onOk={this.handleOK}\n                width={680}\n                // maskClosable={false}\n                // confirmLoading={loading}\n                okText=\"保存\"\n            >\n                <div className=\"content_wrap\">\n                    <Area \n                        data={areaOrigin} \n                        upDataParentState={this.upDataParentState} \n                        checkAll={checkAll} \n                        newCityCodes={newCityCodes}\n                    />\n                </div>\n            </Modal>\n        )\n    }\n}",{"ruleId":"251","severity":1,"message":"252","line":58,"column":25,"nodeType":"253","endLine":58,"endColumn":37},{"ruleId":"254","severity":1,"message":"255","line":1,"column":1,"nodeType":"256","endLine":22,"endColumn":2},{"ruleId":"257","severity":1,"message":"258","line":38,"column":21,"nodeType":"259","messageId":"260","endLine":38,"endColumn":44},{"ruleId":"261","severity":1,"message":"262","line":40,"column":34,"nodeType":"263","messageId":"264","endLine":40,"endColumn":36},{"ruleId":"251","severity":1,"message":"252","line":79,"column":29,"nodeType":"253","endLine":79,"endColumn":66},{"ruleId":"251","severity":1,"message":"252","line":223,"column":51,"nodeType":"253","endLine":223,"endColumn":63},{"ruleId":"265","severity":1,"message":"266","line":48,"column":32,"nodeType":"267","messageId":"268","endLine":48,"endColumn":34},{"ruleId":"265","severity":1,"message":"266","line":87,"column":51,"nodeType":"267","messageId":"268","endLine":87,"endColumn":53},{"ruleId":"265","severity":1,"message":"266","line":119,"column":25,"nodeType":"267","messageId":"268","endLine":119,"endColumn":27},{"ruleId":"269","severity":1,"message":"270","line":28,"column":24,"nodeType":"253","endLine":28,"endColumn":93},{"ruleId":"265","severity":1,"message":"266","line":26,"column":51,"nodeType":"267","messageId":"268","endLine":26,"endColumn":53},{"ruleId":"271","severity":1,"message":"272","line":81,"column":17,"nodeType":"273","messageId":"274","endLine":81,"endColumn":21},{"ruleId":"271","severity":1,"message":"272","line":201,"column":17,"nodeType":"273","messageId":"274","endLine":201,"endColumn":21},{"ruleId":"271","severity":1,"message":"275","line":201,"column":23,"nodeType":"273","messageId":"274","endLine":201,"endColumn":33},{"ruleId":"271","severity":1,"message":"276","line":201,"column":35,"nodeType":"273","messageId":"274","endLine":201,"endColumn":42},{"ruleId":"271","severity":1,"message":"277","line":201,"column":44,"nodeType":"273","messageId":"274","endLine":201,"endColumn":51},{"ruleId":"271","severity":1,"message":"278","line":202,"column":39,"nodeType":"273","messageId":"274","endLine":202,"endColumn":56},{"ruleId":"271","severity":1,"message":"279","line":174,"column":61,"nodeType":"273","messageId":"274","endLine":174,"endColumn":75},{"ruleId":"271","severity":1,"message":"280","line":174,"column":77,"nodeType":"273","messageId":"274","endLine":174,"endColumn":95},{"ruleId":"271","severity":1,"message":"281","line":174,"column":97,"nodeType":"273","messageId":"274","endLine":174,"endColumn":115},{"ruleId":"271","severity":1,"message":"278","line":439,"column":109,"nodeType":"273","messageId":"274","endLine":439,"endColumn":126},{"ruleId":"261","severity":1,"message":"262","line":483,"column":54,"nodeType":"263","messageId":"264","endLine":483,"endColumn":56},{"ruleId":"261","severity":1,"message":"262","line":512,"column":50,"nodeType":"263","messageId":"264","endLine":512,"endColumn":52},{"ruleId":"261","severity":1,"message":"262","line":540,"column":50,"nodeType":"263","messageId":"264","endLine":540,"endColumn":52},{"ruleId":"271","severity":1,"message":"272","line":81,"column":17,"nodeType":"273","messageId":"274","endLine":81,"endColumn":21},{"ruleId":"271","severity":1,"message":"272","line":229,"column":17,"nodeType":"273","messageId":"274","endLine":229,"endColumn":21},{"ruleId":"271","severity":1,"message":"276","line":229,"column":53,"nodeType":"273","messageId":"274","endLine":229,"endColumn":60},{"ruleId":"271","severity":1,"message":"277","line":229,"column":62,"nodeType":"273","messageId":"274","endLine":229,"endColumn":69},{"ruleId":"271","severity":1,"message":"282","line":230,"column":29,"nodeType":"273","messageId":"274","endLine":230,"endColumn":39},{"ruleId":"271","severity":1,"message":"278","line":230,"column":51,"nodeType":"273","messageId":"274","endLine":230,"endColumn":68},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'type' is assigned a value but never used.","Identifier","unusedVar","'cancelArea' is assigned a value but never used.","'groupID' is assigned a value but never used.","'loading' is assigned a value but never used.","'chinaCityInfoList' is assigned a value but never used.","'activeProvince' is assigned a value but never used.","'activeProvinceCode' is assigned a value but never used.","'activeProvinceName' is assigned a value but never used.","'cateOrigin' is assigned a value but never used."]